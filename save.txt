def generate_prompt_webshop(self, goal, subgoals, deque_obs, deque_actions):
        ldo = len(deque_obs)
        lda = len(deque_actions)

        obs = ""
        for i in range(ldo):
            obs += f" \n Observation {i}: {deque_obs[i]}"
            
            if i < lda:
                obs += f"\n Action {i}: search for {deque_actions[i][7:-1]}" if deque_actions[i].startswith('search[') \
                    else f"\n Action {i}: click on button {deque_actions[i][13:-1]}"
            else:
                obs += f"\n Action {i}: search for " if subgoals[0].startswith('search[') \
                    else f"\n Action {i}: click on button "
    
                
        return goal + ", " + obs


def generate_prompt_webshop(self, goal, subgoals, deque_obs, deque_actions):
        ldo = len(deque_obs)
        lda = len(deque_actions)

        # head_prompt = "Possible action of the agent:"
        # for sg in subgoals:
        #    head_prompt += " {},".format(sg)
        # head_prompt = head_prompt[:-1]

        # g = " \n Goal of the agent: {}".format(goal)
        g = "Goal of the agent: {}".format(goal)
        obs = ""
        for i in range(ldo):
            obs += " \n Observation {}: ".format(i)
            obs += "{}, ".format(deque_obs[i])
            obs += "\n Action {}: ".format(i)
            if i < lda:
                obs += "{}".format(deque_actions[i])
        return g + obs
        # return head_prompt + g + obs



if llm_scoring_module_key == "score":
            self.filter_candidates_fn = lambda candidates: [[action[7:-1] if action.startswith("search[") else action[13:-1] for action in actions] for actions in candidates]
        elif llm_scoring_module_key == "policy_head":
            self.filter_candidates_fn = lambda candidates: None


if llm_scoring_module_key == "score":
            self.filter_candidates_fn = lambda candidates: candidates


print(len(goal + ", " + obs))




for index in range(-1, -len(seq["input_ids"]) - 1, -1):
                    if seq["input_ids"][index] == action_id:
                        break